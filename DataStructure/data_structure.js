// 자료구조

/*
  1. 선형 자료구조: 하나의 데이터 뒤에 다른 데이터가 하나 존재
    - 배열(array)
    - 연결 리스트(linked list)
    - 스택(stack)
    - 큐(queue)
  2. 비선형 자료구조: 하나의 데이터 뒤에 다른 데이터가 여러 개 가능
    - 트리(tree)
    - 그래프(graph)
*/

// 성능 측정 방법

/*
  시간 복잡도: 알고리즘에 사용되는 연산 횟수
  공간 복잡도: 알고리즘에 사용되는 메모리의 양
*/

// Big-O 표기법

/*
  복잡도를 표현할 때 Big-O 표기법을 사용
  1. 특정 알고리즘이 얼마나 효율적인지 수치적으로 표현
  2. 가장 빠르게 증가하는 항만을 고려하는 표기법
 */

// O(n)의 시간 복잡도를 가지는 알고리즘
let n = 10;
let summary = 0;

for (let i = 0; i < n; i++) {
  summary += i;
}

console.log(summary); // 45

// O(n^2)의 시간 복잡도를 가지는 알고리즘
let n2 = 9;

for (let i = 1; i <= n2; i++) {
  for (let j = 1; j <= n2; j++) {
    console.log(`${i} X ${j} = ${i * j}`);
  }
}